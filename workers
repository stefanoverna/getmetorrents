#!/usr/bin/env ruby

require './init'
require 'daemon_spawn'

class ResqueWorkerDaemon < DaemonSpawn::Base
  def start(args)
    queue = args[self.index]
    queue = "*" if queue == "all"
    puts "Starting #{queue} at #{self.index}"
    @worker = Resque::Worker.new(queue) # Specify which queues this worker will process
    @worker.verbose = 1 # Logging - can also set vverbose for 'very verbose'
    @worker.work
  end

  def stop
    @worker.try(:shutdown)
  end
end

queues = ARGV.map do |r|
  bits = r.split(",", 2)
  puts bits.inspect
  [].fill(bits.first, 0, (bits[1] || 1).to_i)
end.flatten
puts queues.inspect

ResqueWorkerDaemon.spawn!({
  :processes => queues.length - 1,
  :log_file => File.join('./log/resque_worker.log'),
  :pid_file => File.join('./tmp/pids/resque_worker.pid'),
  :sync_log => true,
  :working_dir => File.dirname(__FILE__)
}, queues)
